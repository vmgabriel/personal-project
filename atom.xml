<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Logos de Gabriel</title>
  
  <subtitle>Camino al Conocimiento</subtitle>
  <link href="https://vmgabriel.com/atom.xml" rel="self"/>
  
  <link href="https://vmgabriel.com/"/>
  <updated>2024-04-08T19:00:00.000Z</updated>
  <id>https://vmgabriel.com/</id>
  
  <author>
    <name>Gabriel Vargas Monroy</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Python Funcional 2 - El Compositor de Funciones</title>
    <link href="https://vmgabriel.com/2024/04/08/python-composer/"/>
    <id>https://vmgabriel.com/2024/04/08/python-composer/</id>
    <published>2024-04-08T19:00:00.000Z</published>
    <updated>2024-04-08T19:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>Hola de nuevo, les cuento que ya un rato programando en programacion funcional me he encontrado varios comportamientos frecuentes a la hora de usar este paradigma, uno de ellos es a la hora de construir varias funciones y que con estas generar una nueva que contenga un comportamiento especifico, recordemos que una de las caracteristicas que permite trabajar con programacion funcional es usar <a href="https://en.wikipedia.org/wiki/Currying" title="currying wikipedia">currying</a>.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> typing <span class="keyword">import</span> <span class="type">Callable</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">currying</span>(<span class="params">x: <span class="built_in">int</span></span>) -&gt; <span class="type">Callable</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">other_function</span>(<span class="params">y: <span class="built_in">int</span></span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">        <span class="keyword">return</span> x + y</span><br><span class="line">    <span class="keyword">return</span> other_function</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">various_currying = <span class="keyword">lambda</span> x: <span class="keyword">lambda</span> y: <span class="keyword">lambda</span> z: x + y + z</span><br><span class="line"></span><br><span class="line">currying(<span class="number">1</span>)(<span class="number">1</span>) <span class="comment"># 2</span></span><br><span class="line">various_currying(<span class="number">1</span>)(<span class="number">1</span>)(<span class="number">1</span>) <span class="comment"># 3</span></span><br></pre></td></tr></table></figure><p>Ese ejemplo que observamos detalla una situacion tipica de currying ya que este tipo de funciones con parametros claros y generalmente solo uno dan la posibilidad de ser usados en otras funciones y que incluso tambien puedan ser consideradas funciones de alto orden en el caso que sean completamente abstractas, otra de esas ventajas que tiene este tipo de funciones es lo facil de testearse; sin embargo, no todo lo que vemos es ventaja, esto tambien tiene desventajas como la legibilidad vaga.</p><p>Cuando tenemos un monton de funciones que ya estan separadas, se entiende funcionamiento y comportamiento sin que tenga finales inesperados, se pueden llegar a encajar como si fueran piezas de lego generando otra clase de funciones, y es ahi donde entra esta funcion de utilidad que convierte un monton de funciones en una sola mas legile.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> typing <span class="keyword">import</span> <span class="type">Callable</span></span><br><span class="line"><span class="keyword">from</span> functools <span class="keyword">import</span> reduce</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">compose</span>(<span class="params">*functions: <span class="built_in">list</span>[<span class="type">Callable</span>]</span>) -&gt; <span class="type">Callable</span>:</span><br><span class="line">    <span class="keyword">return</span> reduce(</span><br><span class="line">        <span class="keyword">lambda</span> f, g: <span class="keyword">lambda</span> x: g(f(x)),</span><br><span class="line">        functions,</span><br><span class="line">        <span class="keyword">lambda</span> x: x</span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">sum</span>(<span class="params">x</span>):</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">lambda</span> y: x + y</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">mult</span>(<span class="params">x</span>):</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">lambda</span> y: y * x</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">pot</span>(<span class="params">m</span>):</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">lambda</span> y: y ** m</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">send_number</span>(<span class="params">n: <span class="built_in">int</span></span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;sended - &quot;</span>, n)</span><br><span class="line">    <span class="keyword">return</span> n</span><br><span class="line"></span><br><span class="line">compose(</span><br><span class="line">    <span class="built_in">sum</span>(<span class="number">1</span>),</span><br><span class="line">    mult(<span class="number">2</span>),</span><br><span class="line">    pot(<span class="number">2</span>),</span><br><span class="line">    send_number,</span><br><span class="line">)(<span class="number">3</span>)</span><br></pre></td></tr></table></figure><p>Aprovechando que las funciones son claras y consisas podemos convertir lo que podria ser una linea inmensamente larga y poco legible en una herramienta poderosa y rapida de entender donde podemos observar todas esas ventajas que trae la programacion funcional, esto sin perder ventajas como lo son lo facil que puede llegar a ser testear.</p><p>La funcion compose puede convertirse facilmente en otra funcion con un nombre diferente y capaz de ser usada y testeada de una manera practica.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">operate: <span class="type">Callable</span> = compose(</span><br><span class="line">    <span class="built_in">sum</span>(<span class="number">1</span>),</span><br><span class="line">    mult(<span class="number">2</span>),</span><br><span class="line">    pot(<span class="number">2</span>),</span><br><span class="line">    send_number,</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">operate(<span class="number">3</span>)</span><br></pre></td></tr></table></figure><p>Las ventajas son varias, sabes en este ejemplo que suma, multiplica, potencia y luego envia el numero, sin que ninguna de estas tengan que interceder una con otra en cuestion a logica.<br>Este es un peque√±o dato que queria dejarles y que me parece una de las herramientas mas poderosas que puede tener la programacion funcional.</p>]]></content>
    
    
    <summary type="html">La programacion funcional aprovecha varias situaciones que a lo largo del paradigma nos encontramos de manera frecuente, una de ellas es la situacion en la que tenemos varias funciones y usaramos estas para generar una secuencia de funciones para crear una nueva funcion.</summary>
    
    
    <content src="https://vmgabriel.com/images/post/python-functional.png" type="image"/>
    
    
    <category term="python" scheme="https://vmgabriel.com/categories/python/"/>
    
    <category term="funcional" scheme="https://vmgabriel.com/categories/python/funcional/"/>
    
    
    <category term="python" scheme="https://vmgabriel.com/tags/python/"/>
    
    <category term="patrones" scheme="https://vmgabriel.com/tags/patrones/"/>
    
    <category term="funcional" scheme="https://vmgabriel.com/tags/funcional/"/>
    
  </entry>
  
  <entry>
    <title>Python Funcional</title>
    <link href="https://vmgabriel.com/2021/10/25/python-functional1/"/>
    <id>https://vmgabriel.com/2021/10/25/python-functional1/</id>
    <published>2021-10-25T12:00:00.000Z</published>
    <updated>2021-10-25T12:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Programacion-Funcional-en-Python-1"><a href="#Programacion-Funcional-en-Python-1" class="headerlink" title="Programacion Funcional en Python 1"></a>Programacion Funcional en Python 1</h1><p>La programacion funcional es un paradigma de desarrollo, una forma de atacar los problemas que enfrentamos dia a dia en el entorno de la tecnologia, y a su vez,  las pautas para que concertemos dentro de un equipo de desarrollo como vamos a atacar el problema que se nos presente viendo las ventajas que ofrece el paradigma funcional frente a otras como estructurada o orientada a objetos.</p><h2 id="Definiciones"><a href="#Definiciones" class="headerlink" title="Definiciones"></a>Definiciones</h2><p>A partir de la programacion funcional se ha logrado aportar al desarrollo un monton de ventajas que otros paradigmas ofrecerian pero con mayor complejidad, es por ello que este post se me hace vital no solo porque la forma de pensar con dicho paradigma es totalmente diferente a estructurado(EP) o Orientado a Objetos(OOP) de la que normalmente ya que la tendencias previas del mercado han ofrecido y solicitado para sus soluciones de software.</p><p>Es asi que aunque no muy viejo es la solucion mas apegada a las matematicas como forma de atacar el problema que tenemos al frente, y es con ello que encontramos que las funciones cobran una gran importancia, y es que se convierte en una moneda de cambio, a cada funcion le vamos a ofrecer otra funcion y las funciones en si se comportan como una variable, ahi es donde entra en la ecuacion python.</p><h3 id="Programacion-Estructurada"><a href="#Programacion-Estructurada" class="headerlink" title="Programacion Estructurada"></a>Programacion Estructurada</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Paradigma Estructurado</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    a = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&quot;Insert number 1: &quot;</span>))</span><br><span class="line">    b = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&quot;Insert number 2: &quot;</span>))</span><br><span class="line">    c: <span class="built_in">int</span> = <span class="number">0</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> a &lt; b:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;&#123;A&#125; is lower to &#123;B&#125;&quot;</span>.<span class="built_in">format</span>(A=a, B=b))</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;&#123;A&#125; is greater or equal to &#123;B&#125;&quot;</span>.<span class="built_in">format</span>(A=a, B=b))</span><br><span class="line">        </span><br><span class="line">    c = a + b</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;The Sum is &#123;C&#125;&quot;</span>.<span class="built_in">format</span>(C=c))</span><br><span class="line">        </span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(c):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;The Value &#123;I&#125; is lower than &#123;C&#125;&quot;</span>.<span class="built_in">format</span>(I=i, C=c))</span><br></pre></td></tr></table></figure><p>En el Paradigma estructurado se observa la asignacion desde el inicio, el proceso en el punto medio asi como tambien un resultado esperado a partir de ciclos y condicionales, normalmente la forma de programar y ver el mundo es asi, sin embargo nosotros tenemos automatizado dicho proceso mental, asi que reducimos ese proceso y analizamos el proceso como una lista de la siguiente manera:</p><ul><li>Tomo Valor 1</li><li>Tomo Valor 2</li><li>Verifico quien es mayor de los dos</li><li>imprimo quien es el mayor</li><li>sumo los dos valores en uno nuevo</li><li>imprimo la suma de los dos numeros</li><li>itero el valor de los dos sumados</li><li>por cada iteracion imprimo el numero y digo que es menor</li></ul><p>Como se puede observar en la lista funciona como un pseudocodigo, normalmente las personas analizamos nuestras tareas de rutina diarios y con ello atacamos el problema sin importar que, sin embargo muchas veces cuando el codigo es mas largo(que en programacion estructurada es muy facil llegar all√°), empezamos a tener problemas como desarrolladores a leerlo y en ultimas mantenerlo, otro de esos tipicos problemas que posee el desarrollo con este paradigma es lo dificil que es testear y optimizar.</p><h2 id="Programacion-Orientada-a-Objetos"><a href="#Programacion-Orientada-a-Objetos" class="headerlink" title="Programacion Orientada a Objetos"></a>Programacion Orientada a Objetos</h2><p>Cuando vemos las dificultades resultantes que posee la programacion estructura que puede tender a la programacion spaghetti se buscaron formas para que programar no sea algo que genere sufrimiento y que pueda conllevar a un codigo mas facil de ser trabajado a futuro, adaptable ante nuevas mejoras y capaz de generar segmentos de codigo con la capacidad de ser usados en otros proyectos.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Input</span>:</span><br><span class="line">  val: <span class="built_in">int</span> = <span class="literal">None</span></span><br><span class="line">  <span class="keyword">def</span> <span class="title function_">get_int</span>(<span class="params">self, message: <span class="built_in">str</span></span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">      <span class="variable language_">self</span>.val = <span class="built_in">int</span>(<span class="built_in">input</span>(message))</span><br><span class="line">      <span class="keyword">return</span> <span class="variable language_">self</span>.val</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">      <span class="keyword">raise</span> Exception(<span class="string">&quot;Not Valid Input&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Sum</span>:</span><br><span class="line">  res: <span class="built_in">int</span> = <span class="literal">None</span></span><br><span class="line">  <span class="keyword">def</span> <span class="title function_">execute</span>(<span class="params">self, *args: <span class="built_in">list</span>[<span class="built_in">int</span>]</span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">    res = <span class="built_in">sum</span>(args)</span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Comparator</span>:</span><br><span class="line">  vals: <span class="built_in">list</span>[<span class="built_in">int</span>] = []</span><br><span class="line">  <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, *args</span>):</span><br><span class="line">    <span class="variable language_">self</span>.vals = args</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">def</span> <span class="title function_">compare</span>(<span class="params">self, is_minor: <span class="built_in">bool</span> = <span class="literal">True</span></span>) -&gt; <span class="built_in">tuple</span>[<span class="built_in">int</span>, <span class="built_in">list</span>[<span class="built_in">int</span>]]:</span><br><span class="line">    result: <span class="built_in">tuple</span>[<span class="built_in">int</span>, <span class="built_in">list</span>[<span class="built_in">int</span>]] = ...</span><br><span class="line">    compared = <span class="built_in">sorted</span>(<span class="variable language_">self</span>.vals)</span><br><span class="line">    <span class="keyword">if</span> is_minor:</span><br><span class="line">      result = (compared[<span class="number">0</span>], compared[<span class="number">1</span>:])</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">      result = (compared[-<span class="number">1</span>], compared[:-<span class="number">1</span>])</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="Programacion-Funcional"><a href="#Programacion-Funcional" class="headerlink" title="Programacion Funcional"></a>Programacion Funcional</h2><p>Todos los demas paradigmas aunque no parezca cierto son un poco mas modernos y son construidos con el objetivo de solucionar los problemas que aquejaban al presente por el cual fue construido, sin embargo, con el tiempo cada uno de los paradigmas presentaban dificultades a la hora de avanzar(eso no indica que no se usen o se hayan perdido en el tiempo, cada paradigma bien usado es bueno ya que atacara la solucion). La programacion funcional en si misma guarda la esencia de las matematicas y la logica en si que son la base de las construcciones de todos los lenguajes de programacion por si mismo pueden llegar a ser complicados o en parte situacionales.</p><p>Cuando se trabaja con la programacion funcional el objetivo en si es el uso de procesos sin necesidad de llegar a la repeticion, es por eso que las matematicas y la logica son cada vez mas participes.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">input</span>(<span class="params">msg: <span class="built_in">str</span></span>) -&gt; <span class="built_in">str</span>:</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">input</span>(msg)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">det to_int(val: <span class="built_in">str</span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">int</span>(val)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">sum</span>(<span class="params">*args</span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">    <span class="string">&quot;&quot;&quot;Recursive process this use the same function&quot;&quot;&quot;</span></span><br><span class="line">    head, *rest = args</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> rest:</span><br><span class="line">       <span class="keyword">return</span> head</span><br><span class="line">    <span class="keyword">return</span> head + <span class="built_in">sum</span>(*rest)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">comparator</span>(<span class="params">to_compare: <span class="built_in">list</span>[<span class="built_in">int</span>], proc: <span class="built_in">list</span>[<span class="built_in">int</span>]</span>) -&gt; <span class="built_in">list</span>[<span class="built_in">list</span>[<span class="built_in">int</span>], <span class="built_in">list</span>[<span class="built_in">int</span>]]:</span><br><span class="line">    head, *rest = to_compare</span><br><span class="line">    <span class="keyword">if</span> hot rest:</span><br><span class="line">       <span class="keyword">return</span> head, []</span><br><span class="line">    <span class="keyword">return</span> comparator(<span class="built_in">sorted</span>(rest), [head])</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>La caracteristica que tiene es que las funciones funcionan por si mismas, el uso de las funciones es la principal caracteristicas y a su vez hay funciones que tienen de otras funciones, eso normalmente se le conoce como curry.</p><p>Python es un lenguaje multiparadigma eso quiere decir que la disponibilidad de paradigma la escoge el equipo de desarrollo&#x2F;desarrollador teniendo la posiblidad de evaluar los alcances y limitaciones de cada uno de estos paradigmas. Esta caracteristica ademas de varias otras permitiran acceder a todo el poder que tiene la tecnologia a nivel funcional.</p>]]></content>
    
    
    <summary type="html">El paradigma funcional explica formas de atacar un problema en la programacion con un enfasis dirigido a la inmutabilidad, el facil testeo, entre otras.</summary>
    
    
    <content src="https://vmgabriel.com/images/post/python-functional.png" type="image"/>
    
    
    <category term="python" scheme="https://vmgabriel.com/categories/python/"/>
    
    <category term="funcional" scheme="https://vmgabriel.com/categories/python/funcional/"/>
    
    
    <category term="python" scheme="https://vmgabriel.com/tags/python/"/>
    
    <category term="funcional" scheme="https://vmgabriel.com/tags/funcional/"/>
    
    <category term="POO" scheme="https://vmgabriel.com/tags/POO/"/>
    
    <category term="contextos" scheme="https://vmgabriel.com/tags/contextos/"/>
    
  </entry>
  
  <entry>
    <title>Seguridad en Aplicaciones Web Modernas</title>
    <link href="https://vmgabriel.com/2020/05/28/seguridad-en-aplicaciones-web-modernas/"/>
    <id>https://vmgabriel.com/2020/05/28/seguridad-en-aplicaciones-web-modernas/</id>
    <published>2020-05-28T00:02:10.000Z</published>
    <updated>2020-05-28T00:02:10.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Seguridad-en-Apliaciones-Web-Moderna"><a href="#Seguridad-en-Apliaciones-Web-Moderna" class="headerlink" title="Seguridad en Apliaciones Web Moderna"></a>Seguridad en Apliaciones Web Moderna</h1><p>Uno de los mayores problemas que se enfrenta el desarrollador web durante el dia a dia es el uso de aplicaciones modernas y escalables es la seguridad en la web y es que para nadie es un secreto que los problemas que en general este enfrenta es variado.</p><p>Debido a ello es necesario explicar claramente como podemos enfrentar con todo lo que nos ofrece las arquitecturas modernas y las librerias para adaptarnos a las herramientas, siendo mas comenzemos.</p><h2 id="JWT-JSON-Web-Token"><a href="#JWT-JSON-Web-Token" class="headerlink" title="JWT - JSON Web Token"></a>JWT - JSON Web Token</h2><p>Una de las herramientas modernas que nos ofrecen hoy en dia para la autenticacion entre micro-servicios, y es que JWT es una herramienta imprescidible cuando lo que queremos es consumir de un stack de micro-servicios.</p><h3 id="Que-es-JWT"><a href="#Que-es-JWT" class="headerlink" title="Que es JWT?"></a>Que es JWT?</h3><p>Es una herramienta moderna para que podamos insertar algunos datos para que cuando tu te comunicas con um micro-servicios muestres tu JWT, es como un pasaporte de acceso que alguien porque te identificaste correctemante. Te dan este acceso cuando te autenticas, caso cuando por lo general ingresas usuario y contrase√±a, este en general te devuelve un jwt, los progamadores modernos los programadores lo guardan en cada uno de los navegadores de cada uno de los usuarios que ingresaron nuestra app, es por ello que cuando usamos esta podemos usarlo con nuestro y no el de otra persona, este JWT generalemente tiene lo siguiente dentro</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title class_">JWTDeencripted</span> = &#123;</span><br><span class="line">  <span class="attr">exp</span>: <span class="number">123456</span>, </span><br><span class="line">  <span class="comment">// Una Fecha de Expiracion donde el usuario</span></span><br><span class="line">  <span class="comment">// debera pedir un nuevo pasaporte para disfrutar el servio</span></span><br><span class="line">  <span class="attr">userId</span>: <span class="string">&quot;xxxxxxxxxxxxxxxxxxxxxxxx&quot;</span>, <span class="comment">// Id de Usuario que lo identifica en el sistema</span></span><br><span class="line">  <span class="attr">permission</span>: [<span class="string">&quot;perm1-create&quot;</span>, <span class="string">&quot;perm2-update&quot;</span>, <span class="string">&quot;perm3-delete&quot;</span>],</span><br><span class="line">  <span class="comment">// Permisos de acceso del usuario(depende de como se haga la estrategia de autorizacion)</span></span><br><span class="line">  <span class="attr">roleId</span>: <span class="string">&quot;zzzzzzzzzzzzzzzz&quot;</span>, <span class="comment">// Id del rol, por si algun sevicio lo requiera</span></span><br><span class="line">  ... <span class="comment">// En general son estos datos, pero es posible ingresar mas como por ejemplo IP</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>Con este pasaporte el usuario puede crear, editar o eliminar si tiene autorizacion para hacerlo.<br>Para que sea seguro se encripta con una constrase√±a privada dejando como resultado algo similar a:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="variable constant_">JWT</span> = <span class="string">&#x27;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c&#x27;</span>;</span><br></pre></td></tr></table></figure><p>Podemos reconocer facilmente si es un JWT sabiendo que va a tener tres partes separadas por un punto.<br>Con esto lo unico que debemos hacer es verificar previamente cuando hacemos algun proceso si posee acesso o no, generalmente el acesso moderno se pone en una cookie segura que tenga HTTP-ONLY activado.</p><h3 id="Porque-En-Una-Cookie"><a href="#Porque-En-Una-Cookie" class="headerlink" title="Porque En Una Cookie?"></a>Porque En Una Cookie?</h3><p>Principalmente porque es horizontal para la aplicacion, sin embargo tambien tiene una ventaja adicional, se puede encriptar por segunda vez, entonces con ello tenemos una doble seguridad.</p><h3 id="Que-Diferencias-hay-entre-autorizar-y-autenticar"><a href="#Que-Diferencias-hay-entre-autorizar-y-autenticar" class="headerlink" title="Que Diferencias hay entre autorizar y autenticar?"></a>Que Diferencias hay entre autorizar y autenticar?</h3><p>Es simple, esto es debido a que cuando tu unicamente autenticasle das acceso total a todo lo que tiene tu aplicacion, pero, esto no es correcto, no quieres darle acceso de modificar el comportamiento de la aplicacion a un usuario comun, es debido a esto que cuadndo un usuario lanza una peticion HTTP a tus servicios el paso posterior es verificar si tiene permisos para realizar dicha accion. Es por esto que las estrategias de autorizacion varian entre aplicaciones y el de autenticacion es estandar.</p><img src="/images/post/auth/search.png" alt="Verificacion de Acceso por Key" style="width:200px;"/><h3 id="Hay-Ademas-Otras-Estrategias-para-Autenticar"><a href="#Hay-Ademas-Otras-Estrategias-para-Autenticar" class="headerlink" title="Hay Ademas Otras Estrategias para Autenticar?"></a>Hay Ademas Otras Estrategias para Autenticar?</h3><p>Para autenticar puedes usar las herramientas que da AuthV2 para conectarte con google, twitter, facebook, gitlab, entre muchas otras opciones.</p><h3 id="Que-es-AuthV2"><a href="#Que-es-AuthV2" class="headerlink" title="Que es AuthV2?"></a>Que es AuthV2?</h3><p><img src="/images/post/auth/authentication.png" alt="Acceso Por Usuario y Contrase√±a" title="Ingreso Por Usuario y Contrase√±a"></p><p>Es una estrategia de la que esperas que una aplicacion de terceros te de el acceso, nosotros normalmente vemos eso en aplicaciones que dice ‚ÄúIngresa con Google o Amazon o ‚Ä¶‚Äù tu ingresas con tu usuario y contrase√±a de la plataforma web de tu gusto y cuando le das permiso de acceso esta manda un token correspondiente al permiso de acceso a la aplicacion, con esto podemos evitar muchos dolores de cabeza en apliaciones modernas.</p><p><img src="/images/post/auth/gitlab-auth.png" alt="Autenticacion de Gitlab" title="Ejemplo de Autenticacion"></p><h3 id="Y-la-Estrategia-Local"><a href="#Y-la-Estrategia-Local" class="headerlink" title="Y la Estrategia Local?"></a>Y la Estrategia Local?</h3><p>Cuando hablo de una estrategia local me refiero al tipo ingrese usuario y contrase√±a de una pagina culquiera de la que tu conoces poca informacion. Ya creo que se esta entendiendo, no todas las personas confian en dar su informacion o otra pagina mas, es por ello que deben haber posibilidades de hacerlo con una de terceros.</p><h3 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h3><p>Para problemas modernos, soluciones modernas, la herramienta de JWT en una Cookie para Autorizar, un AuthV2 para autenticar es una manera muy practica y moderna que nos permite cubrir las dos necesidades referentes al control de permisos de un cliente de manera basica, si deseas leer como implemente estas estrategias en un lenguaje puedes ver <a href="https://gitlab.com/vmgabriel/daga-session" title="Link de implementacion de estrategias en un microservicio">Session Micro-Servicio</a>.</p>]]></content>
    
    
    <summary type="html">Cuando nos preocupamos en la seguridad de una pagina web moderna tenemos que tener en cuenta una cuentas como manejaremos las herramientas. Dentro de un micro-servicio describire como se manejaria este problema tipico en cualquier pagina web moderna y una aplicacion en general.</summary>
    
    
    <content src="https://vmgabriel.com/images/post/auth.png" type="image"/>
    
    
    <category term="Dise√±o Web" scheme="https://vmgabriel.com/categories/Diseno-Web/"/>
    
    <category term="Arquitectura Hexagonal" scheme="https://vmgabriel.com/categories/Diseno-Web/Arquitectura-Hexagonal/"/>
    
    <category term="Micro-Servicios" scheme="https://vmgabriel.com/categories/Diseno-Web/Arquitectura-Hexagonal/Micro-Servicios/"/>
    
    
    <category term="javascript" scheme="https://vmgabriel.com/tags/javascript/"/>
    
    <category term="passport" scheme="https://vmgabriel.com/tags/passport/"/>
    
    <category term="jwt" scheme="https://vmgabriel.com/tags/jwt/"/>
    
    <category term="cookie" scheme="https://vmgabriel.com/tags/cookie/"/>
    
  </entry>
  
  <entry>
    <title>Investigacion Arduino en Ambientes Teoricos</title>
    <link href="https://vmgabriel.com/2020/04/19/arduino-y-archlinux/"/>
    <id>https://vmgabriel.com/2020/04/19/arduino-y-archlinux/</id>
    <published>2020-04-19T13:59:10.000Z</published>
    <updated>2020-04-19T13:59:10.000Z</updated>
    
    <content type="html"><![CDATA[<p>Bienvenidos de nuevo a un blog enfocado a ayudar y mejorar a todos aquellos que van a hacer practicas, en este caso arduino, todos sabemos la posibilidad que se tiene cuando se inicia un proyecto, en este caso podremos tener una guia donde explicaremos como lo hice y que cosas pude haber encontrado en cada uno de los proyectos y miniproyectos dados, como es de esperarse no siempre funcionan las cosas como uno quiere ni a la primera ni mucho menos en algunos casos que se hace evidente que estamos haciendo las cosas correctamente.</p><p>Con todo ello, mi objetivo es servir de guia y ser estudiante para cada una de los miniproyectos dados en cada uno, el caso es retroalimentar y mejorar constantemente.</p><p>Con respecto a este post mi objetivo es explicar que problemas en lo mas basico que puede llegar a resultar tener un arduino,en mi caso arduino Leonardo:</p><p><img src="https://gitlab.com/vmgabriel/img-public/-/raw/master/webpage/arduino0/ARDUINO_LEONARDO_01-min.png" alt="Arduino Leonardo Imagen" title="Arduino Leonardo"></p><p>Documentacion Oficial Aqui <a href="https://www.arduino.cc/en/Main/Arduino_BoardLeonardo" title="Pagina Oficial Arduino">Arduino Leonardo - Oficial</a> donde podremos guiarnos facilmente trabajando en conjunto para obtener una ventaja a nivel tecnico de la forma de usoy sus caracteristicas.</p><p>Lo facil es comprarlo, se puede hacer en lugares de electronica, cuestan alrededor de $27000 COP este generalmente viene en un empaque tipico de circuitos electronicos de medianos a grandes que esta enfocado en proteger contra estatica, <strong>En lo Personal creeria que no hay que botarlos y al abrirlo tener el maximo cuidado para preservar nuestro componente electronico como tambien nuestra bolsa que servira para proteger el circuito para posteriores armados</strong>, y tambien nos da un cable que podemos conectarlo a nuestro computador desde un puerto USB,estetambien nos brinda energia para hacer los testeos desde muy cerca del computador.</p><p>Luego de comprar el componente es hora de programarlo, arduino posee un IDE especialmente hecho para este, sin embargo por ahi podemos buscar otros si no nos gusta este, por sencillez use ese mismo, el IDE se puede descargar desde la <a href="https://www.arduino.cc/en/Main/Software" title="Descargar IDE Arduino">Pagina de Descarga Arduino IDE</a> con el cual depende del Sistema Operativo que nosotros tengamos.</p><h3 id="Instalacion-con-Arch-Linux"><a href="#Instalacion-con-Arch-Linux" class="headerlink" title="Instalacion con Arch Linux"></a>Instalacion con Arch Linux</h3><p><img src="https://gitlab.com/vmgabriel/img-public/-/raw/master/webpage/arduino0/archlinux-icon-crystal-64-svg-min.png" alt="Arch Linux Logo" title="Arch-Linux Logo"></p><p>Arch Linux era una distribucion de GNU&#x2F;LINUX construidos de forma independiente con la filosofia ‚ÄúRolling Release‚Äù, pero eso es harina de otro costal, una de las cosas que se complicaron en la instalacion fue haber instalado desde el paquete oficial que tiene archlinux <a href="https://wiki.archlinux.org/index.php/Arduino" title="Wiki Arduino ArchLinux">Wiki Oficial Arduino de ArchLinux</a> desde aqui se puede obtener como es debido informacion acerca de la instalacion, sin embargo, con este tenia muchos problemas asi que lo mejor es descargarlo desde la pagina oficial <a href="https://www.arduino.cc/download_handler.php?f=/arduino-1.8.7-linux64.tar.xz" title="Instalador ArchLinux Arduino">Instalador Oficial Ardino</a> , este nos deja una serie de archivos que son necesarios para entender al momento de descomprimir:</p><p><img src="https://gitlab.com/vmgabriel/img-public/-/raw/master/webpage/arduino0/arduino0-archivos-min.png" alt="Archivos de Arduino" title="Archivos de Arduino"></p><p>Asi como tambien se puede ver de la siguiente manera:</p><p><img src="https://gitlab.com/vmgabriel/img-public/-/raw/master/webpage/arduino0/arduino0-archivos1-min.png" alt="Archivos de Arduino" title="Archivos de Arduino"></p><p>Como podemos evidenciar tenemos los siguientes archivos:</p><ul><li>arduino</li><li>arduino-linux-setup.sh</li><li>arduino-builder</li><li>install.sh</li><li>uninstall.sh</li><li>revision.txt</li><li>examples&#x2F;</li><li>hardware&#x2F;</li><li>java&#x2F;</li><li>lib&#x2F;</li><li>libraries&#x2F;</li><li>reference&#x2F;</li><li>tools&#x2F;</li><li>tools-builder&#x2F;</li></ul><p>Si falta alguno cuando descompriman seguro que cuando hagan el proceso de instalacion seguro aparecera, en general lo unico que seguro necesitamos es darle permisos a ciertos procesos que debemos tener cargados y autorizados para enviar al arduino los cuales son <strong>uucp</strong> y <strong>lock</strong> con ambos debemos agregarnos al grupo para ejecutarlo y tambien cargar <strong>cdc_acm</strong> para el correcto funcionamiento.</p><p>Con ello podemos hacer lo siguiente para que funcione:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> su</span><br><span class="line"><span class="comment">#Escribir aqui la contrase√±a se superUsuario</span></span><br><span class="line">gpasswd -a <span class="variable">$USER</span> uucp</span><br><span class="line">gpasswd -a <span class="variable">$USER</span> lock</span><br></pre></td></tr></table></figure><p>Esto funciona correctamente, el problema es al usar el editor predeterminado de arduino <strong>Arduino IDE</strong>.</p><p><img src="https://onewindows.es/wp-content/uploads/2016/11/arduino-IDE.png" alt="Arduino IDE" title="Imagen Arduino IDE"></p><p>ya que el repositorio de usuarios de archlinux no oficial <strong>AUR</strong> tiene una version de arduino <a href="https://aur.archlinux.org/packages/arduide-git/" title="Arduino IDE AUR">Instalador AUR de ARDUINO IDE</a>, sin embargo por mas que intente no funciono, por eso decargamos en la pagina oficial.</p><p>Con el paquete descargado de forma oficial podemos ejecutar un archivo directamente, <em>arduino</em> solo que hay que darle permisos, de paso hay un archivo de configuracion que podemos ejecutar antes que todo que arrancara las ejecuciones asi como tambien podemos tener todo listo para un reinicio ademas, porque no, lo instalamos.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">./arduino-linux-setup.sh <span class="variable">$USER</span></span><br><span class="line"><span class="comment">#******* Add User to dialout,tty, uucp, plugdev groups *******</span></span><br><span class="line"><span class="comment">#[sudo] password for $USER:</span></span><br><span class="line"><span class="comment">#usermod: el grupo ¬´dialout¬ª no existe</span></span><br><span class="line"><span class="comment">#groupadd: el grupo ¬´plugdev¬ª ya existe</span></span><br><span class="line"><span class="comment">#******* Removing modem manager *******</span></span><br><span class="line"><span class="comment">#sudo: apt-get: command not found</span></span><br><span class="line"><span class="comment">#Restarting udev</span></span><br><span class="line"><span class="comment">#sudo: service: command not found</span></span><br><span class="line"><span class="comment">#*********** Please Reboot your system ************</span></span><br><span class="line">./install.sh</span><br><span class="line"><span class="comment">#Adding desktop shortcut, menu item and file associations for Arduino IDE... done!</span></span><br></pre></td></tr></table></figure><p>Como es evidente quien hizo los scripts no los hizo para archlinux, tenia que ser usuario de Ubuntu y alelos, sin embargo no importa funciona y funciona correctamente, tambien si notamos tambien nos dice que REINICIEMOS, eso es algo que debemos acatar asi que luego de todo esto procedemos a reiniciar y listo, ya esta para su uso.</p><p>Como podemos notar no es una instalacion tipica de ArchLinux, por eso es util tener esta informacion.</p><p>Por ahora con esto seguiremos con el primer mini-proyecto, prender un LED, con eso probaremos todo.</p>]]></content>
    
    
    <summary type="html">El uso de archlinux como distribucion kernel linux favorita en entornos de desarrollo genera ciertas ventajas y desventajas, una de las posibles mejoras que puede tener archlinux es el trabajo como el circuito libre arduino para proyecto de IOT, explico como es su funcionamiento y como abordar el problema que tiene archlinux como la compatibilidad con arduino.</summary>
    
    
    <content src="https://vmgabriel.com/images/post/arduino.png" type="image"/>
    
    
    <category term="iot" scheme="https://vmgabriel.com/categories/iot/"/>
    
    <category term="linux" scheme="https://vmgabriel.com/categories/iot/linux/"/>
    
    
    <category term="arduino" scheme="https://vmgabriel.com/tags/arduino/"/>
    
    <category term="archlinux" scheme="https://vmgabriel.com/tags/archlinux/"/>
    
    <category term="linux" scheme="https://vmgabriel.com/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>Proyecto Logos de Hexo</title>
    <link href="https://vmgabriel.com/2020/04/19/proyecto-hexo/"/>
    <id>https://vmgabriel.com/2020/04/19/proyecto-hexo/</id>
    <published>2020-04-19T13:59:10.000Z</published>
    <updated>2020-04-19T13:59:10.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Proyecto-Logos-Hexo"><a href="#Proyecto-Logos-Hexo" class="headerlink" title="Proyecto Logos Hexo"></a>Proyecto Logos Hexo</h1><p>La idea general de este proyecto es generar un lugar comodo de generacion de conocimiento y aprendizaje, siendo el lector capaz de aprender algunos temas de interes que lo lleven a indagar acerca de como se puede hacer de otra manera o aportando a este u otro proyecto.</p><p>Como siempre considero que la primera cosa para uno entender el trabajo de los demas es generando una herramienta de comunicacion para que esta pueda ser facilmente interpretada y a traves del juicio de cada quien formar una conclusion un poco mas interesante y quizas aprender un poco mas.</p>]]></content>
    
    
    <summary type="html">El proyecto logos es sin duda uno de los mas interesantes proyectos internos que tengo, mi objetivo es que sea la forma de dar abiertamente mis conocimientos a personas dispuestas en ponerlo en evidencia, sea generando un sano debate, como tambien apoyando los conceptos.</summary>
    
    
    <content src="https://vmgabriel.com/images/projects/hexo.png" type="image"/>
    
    
    <category term="Dise√±o Web" scheme="https://vmgabriel.com/categories/Diseno-Web/"/>
    
    <category term="Desarrollo" scheme="https://vmgabriel.com/categories/Diseno-Web/Desarrollo/"/>
    
    
    <category term="hexo" scheme="https://vmgabriel.com/tags/hexo/"/>
    
    <category term="blog" scheme="https://vmgabriel.com/tags/blog/"/>
    
    <category term="javascript" scheme="https://vmgabriel.com/tags/javascript/"/>
    
    <category term="pug" scheme="https://vmgabriel.com/tags/pug/"/>
    
  </entry>
  
  <entry>
    <title>Bienvenida a Blog Logos de Gabriel</title>
    <link href="https://vmgabriel.com/2020/04/17/bienvenida/"/>
    <id>https://vmgabriel.com/2020/04/17/bienvenida/</id>
    <published>2020-04-17T13:59:10.000Z</published>
    <updated>2020-04-17T13:59:10.000Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br><span class="line">$ <span class="built_in">cd</span> ..</span><br><span class="line">$ <span class="built_in">ls</span> -la</span><br><span class="line">$ <span class="built_in">echo</span> <span class="string">&quot;hello world&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    <summary type="html">Aqui hago explico mis planes a futuro con el blog y doy una fuerte bienvenida a mis lectores.</summary>
    
    
    <content src="https://vmgabriel.com/images/post/bienvenida.png" type="image"/>
    
    
    <category term="blog personal" scheme="https://vmgabriel.com/categories/blog-personal/"/>
    
    
    <category term="hexo" scheme="https://vmgabriel.com/tags/hexo/"/>
    
  </entry>
  
</feed>
